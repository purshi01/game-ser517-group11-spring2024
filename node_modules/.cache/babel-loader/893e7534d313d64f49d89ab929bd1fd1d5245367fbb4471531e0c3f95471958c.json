{"ast":null,"code":"var _jsxFileName = \"/Users/purushothamas/Desktop/game-ser517-group11-spring2024/src/Pages/LoginPage.jsx\",\n  _s = $RefreshSig$();\n// LoginPage.jsx\nimport React, { useState } from 'react';\nimport '../styles/LoginPage.css';\nimport Particles from '@tsparticles/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleSignIn = e => {\n    e.preventDefault();\n    // Here you would handle the sign-in logic, possibly using a service function\n    console.log('Sign In:', username, password);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: [/*#__PURE__*/_jsxDEV(Particles, {\n      id: \"tsparticles\",\n      options: {\n        // Your particles configuration from the previous example\n        // Ensure fullScreen: { enable: true, zIndex: -1 } is set to keep it in the background\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login-form\",\n        onSubmit: handleSignIn,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"username\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"UserName\",\n            value: username,\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"password\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"or\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","Particles","jsxDEV","_jsxDEV","LoginPage","_s","username","setUsername","password","setPassword","handleSignIn","e","preventDefault","console","log","className","children","id","options","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/purushothamas/Desktop/game-ser517-group11-spring2024/src/Pages/LoginPage.jsx"],"sourcesContent":["// LoginPage.jsx\nimport React, { useState } from 'react';\nimport '../styles/LoginPage.css'\nimport Particles from '@tsparticles/react';\n\nconst LoginPage = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSignIn = (e) => {\n    e.preventDefault();\n    // Here you would handle the sign-in logic, possibly using a service function\n    console.log('Sign In:', username, password);\n  };\n\n  return (\n    <div className=\"login-page\">\n    <Particles\n        id=\"tsparticles\"\n        options={{\n          // Your particles configuration from the previous example\n          // Ensure fullScreen: { enable: true, zIndex: -1 } is set to keep it in the background\n        }}\n      />\n    <div className=\"login-container\">\n      <form className=\"login-form\" onSubmit={handleSignIn}>\n        <div className='username'>\n          <input\n            type=\"text\"\n            placeholder=\"UserName\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n          </div>\n          <div className='password'>\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n        <div className='button'>\n          <button type=\"submit\">Sign In</button>\n          <span>or</span>\n          <button type=\"button\">Sign Up</button>\n        </div>\n       \n      </form>\n    </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}